# Compose file for production

services:
  # Site
  web:
    container_name: web
    image: ghcr.io/kakajuro/tidytube-web:latest
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    env_file:
      - web/.env.local
    networks:
      - tidytube-prod

  # Server
  server:
    container_name: server
    build:
      context: server
      dockerfile: Dockerfile
      target: runner
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - NODE_ENV=production
    networks:
      - tidytube-prod
  
  # Database
  db:
    container_name: db
    image: redis:alpine
    restart: unless-stopped
    command: sh -c "redis-server /usr/local/etc/redis/redis.conf --requirepass $$REDIS_PASSWORD"
    volumes:
      - ./redis/redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - server/.env
    networks:
      - tidytube-prod
  
  # Caddy (reverse proxy)
  caddy:
    container_name: caddy
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/caddy_data:/data
      - ./caddy/caddy_config:/config
    networks:
      - tidytube-prod
    depends_on:
      - web
      - server
      - umami
    env_file:
      - ./caddy/.env

  # Umami (website analytics)
  umami:
    container_name: umami
    image: ghcr.io/umami-software/umami:postgresql-latest
    ports:
      - "3000:3000"
    depends_on:
      umami_db:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/api/heartbeat"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file: 
      - ./umami/.env
    networks:
      - tidytube-prod
  umami_db:
    container_name: umami_db
    image: postgres:15-alpine
    volumes:
      - ./umami/umami-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file: 
      - ./umami/.env
    networks:
      - tidytube-prod

  # Statping for uptime stats
  statping:
    container_name: statping
    image: adamboutcher/statping-ng
    restart: unless-stopped
    volumes:
      - ./statping:/app
    environment:
      DB_CONN: sqlite
    networks:
      - tidytube-prod


networks:
  tidytube-prod:
    name: tidytube-prod